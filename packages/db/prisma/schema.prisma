generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phone       String?  @unique
  password    String
  role        Role     @default(USER)
  
  applications Application[] @relation("UserApplications")
  inspections  Inspection[]  @relation("UserInspections")
  approvals    Approval[] @relation("UserApprovals")
  buildings    Building[] @relation("OwnerBuildings")

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Application {
  id          String   @id @default(uuid())
  applicantId String
  applicant   User     @relation("UserApplications", fields: [applicantId], references: [id])
  businessName String
  documents    String[]
  buildingId   String?
  building     Building? @relation(fields: [buildingId], references: [id])
  status       Status   @default(PENDING)

  inspection   Inspection?
  approval     Approval?
}

model Building {
  id       String   @id @default(uuid())
  address  String
  ownerId  String
  owner    User @relation("OwnerBuildings", fields: [ownerId], references: [id])

  applications Application[]
  alarms       Alarm[] // One-to-many relation with Alarm
}

model Alarm {
  id          String   @id @default(uuid())
  buildingId  String
  building    Building @relation(fields: [buildingId], references: [id])
  timestamp   DateTime @default(now()) // Stores the current time
  status      AlarmStatus @default(PENDING) // Status with default value
}

model Inspection {
  id            String   @id @default(uuid())
  applicationId String   @unique
  application   Application @relation(fields: [applicationId], references: [id])
  inspectorId   String?
  inspector     User?    @relation("UserInspections", fields: [inspectorId], references: [id])
  findings      String?
  status        InspectionStatus @default(PENDING)
}

model Approval {
  id            String   @id @default(uuid())
  applicationId String   @unique
  application   Application @relation(fields: [applicationId], references: [id])
  approvedById  String?
  approvedBy    User?    @relation("UserApprovals", fields: [approvedById], references: [id])
  remarks       String?
}

enum Role {
  USER
  INSPECTOR
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum InspectionStatus {
  PENDING
  PASSED
  FAILED
}

enum AlarmStatus {
  PENDING
  DEPARTED
  RESOLVED
}